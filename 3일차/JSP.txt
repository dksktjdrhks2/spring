JSP(JAVA Server Page)
 - 웹페이지를 동적으로 작성하기 위해 만들어졌다....
 - JAVA언어를 사용하여 웹을 작성한다....

 - JSP 실행과정
  	
	.jsp 파일  -> .java파일 생성 -> .class파일 생성 -> 실행
	JSP		Servlet


  - 주기함수
    - public void _jspInit() - 서버 실행시 처음 실행되는 메소드...

    - public void _jspService() - 클라이언트 요청시마다 실행되는 메소드...
	- 멀티스레드 방식으로 요청시마다 실행할수 있게 대기 시켜놓는다...
        - get 방식 - doGet()
        - post 방식 - doPost()

    - public void _jspDestroy() - 서버 종료시 객체들을 정리하기위해 실행되는 메소드

----------------------------------------------------------------------------------------------------------------

JSP의 지시자 <%@ %>
 - 페이지에 필요한 정보를 지정하는 역할...
 - Page지시자
  - 해당 JSP페이지에 대한 정보또는 설정을 지정하는 지시자...
  - language - 페이지 내에서 사용할 프로그래밍 언어
  - contentType - 페이지 내에서 사용할 언어와 문자형식을 지정한 속성
  - pageEncoding - 서버내에서 작업할때 사용하는 문자형식을 지정한 속성
  - extends - 상속받으려 하는 상위 클래스를 지정하는 속성
  - import - 사용하려는 클래스를 지정하는 속성
  - session - 세션을 사용할지 말지 정하는 속성
  - buffer , autoflush , info , errorPage , isErrorPage

 - include지시자 
  - JSP파일 내부에 다른 파일을 삽입하기위한 지시자...
 - taglib 지시자
   - JSP 페이지 내에서 사용되는 별도의 표현 언어들을 사용하기 위해 쓰는 지시자
   - EL/JSTL , 커스텀태그...

---------------------------------------------------------------------------------------------------------

Script 요소 4가지
 - <%!  %> - 선언부
  - 전역변수 및 메소드를 선언하는 영역...
  - 클래스 멤버변수 및 멤버메소드를 정의하는 영역....
  - 가독성을 높이기 위해서 가장 처음 아니면 가장 나중에 적어준다...

 - <%   %> - 스크립트릿
  - 일반적인 자바 코드를 작성하는 영역
  - Service메소드의 코드로 변환되는 영역....

 - <%=  %> - 표현식
  - 일반적인 호출하는 부분...
  - Service메소드의 코드로 변환되는 영역....

 - <%--   --%> - 주석문
  - 코드의 부연설명을 적는 부분....
  - 페이지 소스보기시 안보인다....
  - 스크립트 주석처리시 사용해야 한다...

------------------------------------------------------------------------------------------------------------

내장객체
 - jsp가 서블릿으로 변환될때 자동으로 생성되는 9가지 객체...

 1.request	javax.servlet.http.HttpServletRequest
 2.response	javax.servlet.http.HttpServletResponse
 3.out		javax.servlet.jsp.JspWriter
 4.session	javax.servlet.http.HttpSession
 5.application	javax.servlet.ServletContent
 6.pageContext	javax.servlet.jsp.PageContext
 7.page		javax.servlet.jsp.HttpJspPage
 8.config	javax.servlet.ServletConfig
 9.exception	java.lang.Throwable

=========================================================

1.request	javax.servlet.http.HttpServletRequest
 - 클라이언트가 전송한 요청 정보를 제공하는 객체...
  - 파라미터 , 클라이언트의 쿠키, 클라이언트와 관련된 정보...

 - 파라미터 관련 메소드
 java.lang.String	getParameter(java.lang.String name) 
   - 파라미터 값을 받아오는 메소드
 java.util.Map<java.lang.String,java.lang.String[]>	getParameterMap() 
   - 전체의 파라미터 값을 이름과 값으로 맵형태로 반환....     
 java.util.Enumeration<java.lang.String>	getParameterNames() 
   - 전체의 파라미터의 이름을 반환해주는 메소드      
 java.lang.String[]	getParameterValues(java.lang.String name) 
   - 파라미터 값들을 받아오는 메소드(checkbox select태그)...

========================================================================================================

2.response	javax.servlet.http.HttpServletResponse
 - 클라이언트의 요청에 대한 응답정보를 저장하는 객체
 - redirect - 다른 페이지로 이동시키는 방식중에 하나이다....
 - void	sendRedirect(java.lang.String location)  - redirect방식의 메소드...

========================================================================================================
 
 3.out		javax.servlet.jsp.JspWriter
  - JSP페이지의 출력할 내용을 가지고 있는 출력 스트림 객체...

========================================================================================================

 4.session	javax.servlet.http.HttpSession
  - 세션정보를 담고 있는 객체...
  - 프로젝트당 하나의 객체만 생성된다...

========================================================================================================

 5.application	javax.servlet.ServletContent
  - 서버당 한개만 생성되는 객체...
  - 서버의 정보를 저장하는 객체...

========================================================================================================

 6.pageContext	javax.servlet.jsp.PageContext
 - 페이지 실행에 필요한 context정보를 담고 있는 객체...
 - forward 방식
  - abstract  void	forward(java.lang.String relativeUrlPath) 

========================================================================================================

 7.page		javax.servlet.jsp.HttpJspPage
 - Object page = this;
 - this
 - 서블릿 객체 그 자체...

========================================================================================================

 8.config	javax.servlet.ServletConfig
 - jsp페이지가 서블릿으로 변환 될때 참조해야할 초기설정정보를 저장하는 객체...

========================================================================================================

 9.exception	java.lang.Throwable
 - isErrorPage가 true로 지정되어야지만 자동으로 생성되는 객체....
 - JSP페이지에서 예외가 발생했을 경우 예외를 처리하는 페이지로 전달되는 예외 객체..

========================================================================================================

get방식과 post방식
 - 파라미터 값을 어떤 방식으로 데이터를 전달할 것이냐를 결정하는 메소드...
 - get방식 - doGet()
 - post방식 - doPost()

get방식
 - 전달되는 데이터가 주소를 통해 전달된다...
 - 데이터가 눈에 보인다...
 - 보안적인 문제가 없는 데이터를 전달할때 사용된다...
 - 웹 서버에 데이터를 요청 할때 사용되는 방식..
 - 전송 데이터의 길이가 제한이 있다...


post방식
 - 헤더를 통해 데이터가 전달되는 방식..
 - 데이터가 눈에 보이지 않는다...
 - 보안 또는 개인정보에 관련된 데이터 들을 post방식으로 보내게 된다....
 - 웹서버에 데이터를 전달할때 사용하는 방식...
 - 전송데이터의 제한이 없다...파일 전송할때...

=====================================================================================================

student.jsp에서
 학생의 이름과 java jsp spring의 점수를 입력받아서 studentResult.jsp로 보내서
 학생의 이름 세과목의 점수 총점 평균을 출력한 후에
 60점 이상이면 합격을 출력하십시오...

 - 평균은 소수점 두자리까지만 출력....

=====================================================================================================

JavaScript
 - 웹문서를 좀더 동적으로 작성하기위해서 만들어진 자바기반의 스크립트 언어...
 - 제어문 , 함수 , 변수 등...
 - 가독성을 높이고 코드의 충돌을 막기 위해서 보통 head태그 안에 정의한다....
 - 제이쿼리 , AJAX , Node.js.....


<script type="text/javascript">
	
	function 함수명(매개변수) {
		코드작성;
	}

</script>



 - alert(데이터); - 경고창.

 - document객체(this)
  - HTML문서에 대한 모든 정보를 가지고 관리하는 객체..
  - 각각의 웹페이지마다 document객체를 가지고 있다..


------------------------------------------------------------------------------------------------------------------

페이지 이동방식

1. redirect 방식
 - 브라우저가 다른 페이지를 호출하는 형식
 - 기본적으로 데이터의 공유가 되지 않는다....단, get방식으로 데이터를 넘길수는 있다...
 - 새로운 페이지를 호출하는 방식...
 - 다른페이지로 이동할때 URL이 변경된다...
 - <a>태그를 이용하는 방법
 - 내장 객체를 이용하는 방법
  - response객체안의 sendRedirect 메소드를 이용하는 방식
 - 자바스크립트를 이용하는 방식
  - document.location.href = '이동할페이지';
  - location.href = '이동할페이지';

2. forward 방식
 - 서버내에서 다른 페이지로 전환하는 방식
 - 기본적으로 데이터의 공유가 가능하다.
 - request와 response 객체의 제어권을 넘겨주는 방식...
 - 다른페이지로 이동할때 URL이 유지된다,...
 - 내장 객체를 이용하는 방식...
  - pageContext객체 안의 forward메소드를 이용하는 방식
 - jsp액션태그를 이용하는방식 - X
 - java 클래스를 이용하는 방식 - MVC2모델방식에서 많이 쓰인다...
  - RequestDispatcher 객체를 사용한다...
















































































































