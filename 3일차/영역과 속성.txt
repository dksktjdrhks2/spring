
영역과 속성
 - 영역 - 데이터를 공유할수 있는 범위
 - 속성 - 데이터
 - 내장객체를 이용하여 데이터를 공유한다...

 1.Page 영역		- pageContext
  - 현재 페이지에서만 사용되는 객체...
  - service메소드가 실행 되는 동안 유지되는 객체...

 2.Request 영역		- request
  - 1:1페이지 영역
  - 클라이언트의 요청이 처리되는 동안 유효한 범위
  - 포워딩을 통하여 여러개의 페이지에서 유지될수 있다...

 3.Session 영역		- session
  - 세션이 유지되는 동안 처리되는 범위...(웹브라우저가 실행되는 동안...)	
  - 프로젝트 하나당 한개의 session 객체가 생성된다...

 4.Application 영역	- application
  - 웹서버가 유지되는 동안 유효한 범위
  - 웹서버당 하나만 생성된다...

---------------------------------------------------------------------------------------------

세션과 쿠키
 - 관리되는 정보...어디서 관리를 할것이냐...

쿠키(Cookie)
 - 클라이언트 측에서 관리되는 정보
 - 파일 형태로 저장되기 때문에 브라우저가 종료되어도 유지가 가능하다...
 - 보안에 취약하다...
 - 유효 시간을 설정하여 내가 지정한시간동안 유지될수 있도록 만들수 있다...
 - 중요한 정보는 세션에 저장한다....
 - 아이디 기억하기..최근본 상품...


세션(Session)
 - 서버측에서 관리되는 정보...
 - 보안에 취약한 쿠키의 단점을 보완하여 사용...
 - 브라우저가 종료되면 데이터는 사라진다...
 - 내장객체이므로 객체를 따로 만들지 않는다..
 - 내가 지정한 시간동안 아무런 반응이 없으면 세션을 해제할수 있다..
 - 로그인처리...

====================================================================================================

속성(attribute) 관련된 메소드...

Object getAttribute(String key)
 -  key값으로 등록되어 있는 속성을 object타입으로 반환받는 메소드

void setAttribute(String key,Object value)
 - 해당 영역에 key값의 이름으로 Object객체를 등록하는 메소드...

void removeAttribute(String key)
 - key값으로 등록되어 있는 속성을 제거

Enumeration getAttributeNames()
 - 해당 영역에 등록되어 있는 모든 속성들의 이름을 Enumeration타입으로 반환

==============================================================================================

 void invalidate()  -> request.getSession();
 - 세션무효화

 void MaxInactiveInterval(int interval)
 - 클라이언트가 활동을 안할때 몇초뒤에 연결이 해제될지 설정한다.































